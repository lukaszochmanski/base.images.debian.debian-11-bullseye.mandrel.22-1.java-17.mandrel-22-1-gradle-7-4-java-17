allprojects {
    afterEvaluate {
        if (it.plugins.withType(org.gradle.api.publish.maven.plugins.MavenPublishPlugin)) {
            publishing {
                publications {
                    mavenJava(MavenPublication) {
                        from components.java
                        artifact sourcesJar
                        artifact javadocJar
                    }
                }

                repositories {
                    maven {
                        url = version.endsWith('SNAPSHOT') ? codeartifactDistributionSnapshotsUrl : codeartifactDistributionReleasesUrl
                        mavenContent {
                            version.endsWith('SNAPSHOT') ? snapshotsOnly() : releasesOnly()
                        }
                        credentials {
                            username codeartifactUser
                            password codeartifactPass
                        }
                        metadataSources {
                            gradleMetadata()
                        }
                    }
                }
            }
            tasks.withType(PublishToMavenRepository).all {
                doLast {
                    def url = version.endsWith('SNAPSHOT') ? codeartifactDistributionSnapshotsUrl : codeartifactDistributionReleasesUrl
                    println 'Published ' + rootProject.group + ":" + rootProject.name + ":" + version + ' to ' + url
                }
            }
        }
    }
}
